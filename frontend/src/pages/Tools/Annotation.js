import React, { useState } from 'react';
import { FloatButton, message, Alert } from 'antd';
import { FileTextOutlined, DownloadOutlined, QuestionCircleOutlined } from '@ant-design/icons';
import './Annotation.css';
import Loader from '../../blocks/Components/Loaders/Loader';

const Annotation = () => {
  const [imageUrls, setImageUrls] = useState([]);
  const [loading, setLoading] = useState(false);

  // –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–ª–∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω URL
  const API_URL = process.env.NODE_ENV === 'production'
    ? 'https://a2medanalyzer.onrender.com/api/annotation/'
    : 'http://localhost:8000/api/annotation/';
  const BASE_URL = process.env.NODE_ENV === 'production'
    ? 'https://a2medanalyzer.onrender.com'
    : 'http://localhost:8000';

  const handleUpload = async (event) => {
    const file = event.target.files[0];
    if (!file) {
      message.error('–í—ã–±–µ—Ä–∏—Ç–µ CSV-—Ñ–∞–π–ª');
      return;
    }

    setLoading(true);
    setImageUrls([]);
    const formData = new FormData();
    formData.append('file', file);

    try {
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞:', API_URL);
      const response = await fetch(API_URL, {
        method: 'POST',
        body: formData,
      });

      const data = await response.json();
      console.log('–û—Ç–≤–µ—Ç –æ—Ç /api/annotation/:', data);

      if (data.status === 'success') {
        setImageUrls(data.image_urls || []);
        message.success('–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã');
      } else {
        message.error(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
      message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setLoading(false);
    }
  };

  const handleFileInputClick = () => {
    console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏');
    document.getElementById('file-input').click();
  };

  const handleDownload = async (url, name) => {
    console.log('–ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å:', { url, name });
    const downloadUrl = url.startsWith('http') ? url : `${BASE_URL}${url}`;
    console.log('–ü–æ–ª–Ω—ã–π URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', downloadUrl);

    // –ü–æ–ø—Ä–æ–±—É–µ–º fetch –±–µ–∑ Cache-Control
    try {
      const response = await fetch(downloadUrl, {
        method: 'GET',
        mode: 'cors',
        credentials: 'same-origin',
      });
      console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status, response.statusText, {
        headers: Object.fromEntries(response.headers.entries()),
      });

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status} ${response.statusText}`);
      }

      const blob = await response.blob();
      console.log('Blob –ø–æ–ª—É—á–µ–Ω:', { type: blob.type, size: blob.size });

      if (!blob.type.includes('image')) {
        throw new Error(`–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: ${blob.type}`);
      }

      const blobUrl = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = blobUrl;
      link.download = name;
      document.body.appendChild(link);
      link.click();
      console.log('–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è:', name);
      document.body.removeChild(link);
      window.URL.revokeObjectURL(blobUrl);
      message.success(`–§–∞–π–ª ${name} —Å–∫–∞—á–∞–Ω`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ fetch:', error);
      message.warning(`Fetch –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: ${error.message}. –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±.`);

      // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º <a download>, –∫–∞–∫ –≤ Filtrate.js
      try {
        const link = document.createElement('a');
        link.href = downloadUrl;
        link.download = name;
        document.body.appendChild(link);
        link.click();
        console.log('–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è:', name);
        document.body.removeChild(link);
        message.success(`–§–∞–π–ª ${name} —Å–∫–∞—á–∞–Ω (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±)`);
      } catch (fallbackError) {
        console.error('–û—à–∏–±–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', fallbackError);
        message.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å ${name}: ${fallbackError.message}`);
      }
    }
  };

  console.log('–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ imageUrls:', imageUrls);
  console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ loading:', loading);

  return (
    <div className="annotation-container">
      <div className="description-block">
        <h2>
          –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è –≥–µ–Ω–æ–≤ –ø–æ <a href="https://geneontology.org/" target="_blank" rel="noopener noreferrer">GO</a> –∏ <a href="https://www.kegg.jp/kegg/pathway.html" target="_blank" rel="noopener noreferrer">KEGG</a>
        </h2>
        <p className="description">
          –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å CSV-—Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π —ç–∫—Å–ø—Ä–µ—Å—Å–∏–∏ –≥–µ–Ω–æ–≤, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é GO (Gene Ontology) –∏ KEGG (Kyoto Encyclopedia of Genes and Genomes) –∞–Ω–∞–ª–∏–∑–æ–≤.
        </p>
        <p className="description">
          –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏:
        </p>
        <ul className="features-list">
          <li>üîç –í–∞—à —Ñ–∞–π–ª –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Å–µ—Ä–≤–µ—Ä–æ–º</li>
          <li>üìä –í —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–µ–∫—É–Ω–¥ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–≥–ª—è–¥–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏, –æ—Ç—Ä–∞–∂–∞—é—â–∏–µ –æ–±–æ–≥–∞—â—ë–Ω–Ω—ã–µ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –∫–ª–µ—Ç–æ—á–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –º–æ–ª–µ–∫—É–ª—è—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –ø—É—Ç–∏.</li>
        </ul>

        <Alert
          message="–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ"
          description="–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî .csv —Ñ–∞–π–ª —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≥–µ–Ω–æ–≤."
          type="warning"
          showIcon
          style={{ marginTop: 24 }}
        />
      </div>

      <input
        type="file"
        id="file-input"
        accept=".csv"
        onChange={handleUpload}
        style={{ display: 'none' }}
      />

      <FloatButton.Group shape="circle" style={{ insetInlineEnd: 24 }}>
        <FloatButton
          icon={<FileTextOutlined />}
          onClick={handleFileInputClick}
          tooltip="–ó–∞–≥—Ä—É–∑–∏—Ç—å CSV-—Ñ–∞–π–ª"
          disabled={loading}
        />
        <FloatButton
          icon={<QuestionCircleOutlined />}
          type="primary"
          tooltip="–ó–∞–≥—Ä—É–∑–∏—Ç–µ .csv-—Ñ–∞–π–ª –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ (GO –∏ KEGG –∞–Ω–∞–ª–∏–∑)"
        />
      </FloatButton.Group>

      {imageUrls.length > 0 ? (
        <div className="image-results">
          <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏</h3>
          {imageUrls.map((img, index) => (
            <div key={index} className="image-item">
              <h4>{img.name}</h4>
              <img src={img.url} alt={img.name} className="result-image" />
              <button
                className="download-button"
                onClick={() => {
                  console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –°–∫–∞—á–∞—Ç—å –¥–ª—è:', img.name);
                  handleDownload(img.url, img.name);
                }}
                disabled={loading}
              >
                <DownloadOutlined /> –°–∫–∞—á–∞—Ç—å
              </button>
            </div>
          ))}
        </div>
      ) : (
        <p className="no-data">–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏</p>
      )}
      {loading && <Loader />}
    </div>
  );
};

export default Annotation;